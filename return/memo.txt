

①スマホの特集カテゴリはJSで生成する
②絞り込みのURL生成機能
③ランキングから探すRANKING　←　英はPCで消す

※run.js大幅修正
※SPモーダル内の「すべて」の選択肢が不要か千葉さんに確認する
①HTML追加
・アーカイブのdivに目印（.js-search-clone-archive）追加

③会社でCSSで対応
ランキングから探すRANKING　←　英はPCで消す
④気になる点（スマホ実機）
・三点リーダーがテキストと被っている。（text-align:justyfyの影響？）
・パンくずの背景が100％になってない。右側が白い

----------------------------
新しい条件
----------------------------
■#js-categoryの場合
①a要素をクリックした際、現在のURLディレクトリに「/category」と「/hashtag」と「/date」と「?article_data_keyword_filter」が無い場合、通常の遷移を実行する
②a要素をクリックした際、現在のURLディレクトリに「/category」が含まれているが、
「/hashtag」、「/date」、「?article_data_keyword_filter」が無い場合、通常の遷移を実行する
③a要素をクリックした際、現在のURLディレクトリに「/category」が含まれている、且つ、
「/hashtag」or「/date」or「?article_data_keyword_filter」の中のいずれかが含まれている場合、
通常の遷移を実行する。
また、#js-hashtagのラジオボタン、#js-dateのラジオボタン、#js-search-keywordのvalueをリセットする。
④a要素をクリックした際、現在のURLディレクトリに「/hashtag」または「/date」または「?article_data_keyword_filter」が含まれている場合、
「/hashtag」または「/date」または「?article_data_keyword_filter」の前にクリックしたdata-uri属性値をURLに追加しそのURLに遷移する


■#js-category-anotherの場合
①ラジオボタンをチェックした際、
現在のURLディレクトリに「/category」と「/hashtag」と「/date」と「?article_data_keyword_filter」が無い場合、
親のli要素にあるdata-uri属性値をURLの末尾に追加しそのURLに遷移する
②ラジオボタンをチェックした際、現在のURLディレクトリに「/category」が含まれているが、
「/hashtag」、「/date」、「?article_data_keyword_filter」が無い場合、
親のli要素にあるdata-uri属性値をURLの末尾に追加しそのURLに遷移する
③ラジオボタンをチェックした際、現在のURLディレクトリに「/category」が含まれている、且つ、
「/hashtag」or「/date」or「?article_data_keyword_filter」の中のいずれかが含まれている場合、
親のli要素にあるdata-uri属性値をURLの末尾に追加しそのURLに遷移する。
また、#js-hashtagのラジオボタン、#js-dateのラジオボタン、#js-search-keywordのvalueをリセットする。
④ラジオボタンをチェックした際、現在のURLディレクトリに「/hashtag」または「/date」または「?article_data_keyword_filter」が含まれている場合、
「/hashtag」または「/date」または「?article_data_keyword_filter」の前に
親のli要素にあるdata-uri属性値を追加しそのURLに遷移する


■#js-search-keywordの場合
①[name="cmdArticleSearch"]をクリックした際、
現在のURLディレクトリに「/category」と「/hashtag」と「/date」と「?article_data_keyword_filter」が無い場合、
URLの末尾に「?article_data_keyword_filter=」に#js-search-keywordのvalue値を追加しそのURLに遷移する
②[name="cmdArticleSearch"]をクリックした際、現在のURLディレクトリに「?article_data_keyword_filter」が含まれている場合、
「?article_data_keyword_filter」パラメータ値を#js-search-keywordのvalue値に書き換えてそのURLに遷移する
③[name="cmdArticleSearch"]をクリックした際、現在のURLディレクトリに「/category」が含まれている、且つ、
「/hashtag」または「/date」のいずれかが含まれている場合、
「/hashtag」または「/date」以降のURLを削除し、URLの末尾に「?article_data_keyword_filter=」に#js-search-keywordのvalue値を追加しそのURLに遷移する。
また、#js-hashtagのラジオボタン、#js-dateのラジオボタンをリセットする。
④[name="cmdArticleSearch"]をクリックした際、現在のURLディレクトリに「/category」が含まれている、且つ、
「/hashtag」または「/date」が無い場合、
URLの末尾に「?article_data_keyword_filter=」に#js-search-keywordのvalue値を追加しそのURLに遷移する。


■#js-hashtagの場合
①ラジオボタンをチェックした際、
現在のURLディレクトリに「/category」と「/hashtag」と「/date」と「?article_data_keyword_filter」が無い場合、
「/hashtag」と親のli要素にあるdata-uri属性値を繋げてURLの末尾に追加しそのURLに遷移する
②ラジオボタンをチェックした際、現在のURLディレクトリに「/hashtag」が含まれている場合、
URLの「/hashtag」以降を「/hashtag」と親のli要素にあるdata-uri属性値を繋げたものに書き換えてそのURLに遷移する
③ラジオボタンをチェックした際、現在のURLディレクトリに「/category」が含まれている、且つ、
「?article_data_keyword_filter」または「/date」のいずれかが含まれている場合、
「?article_data_keyword_filter」または「/date」以降のURLを削除し、
URLの末尾に「/hashtag」と親のli要素にあるdata-uri属性値を繋げて追加しそのURLに遷移する。
また、#js-dateのラジオボタン、#js-search-keywordのvalueをリセットする。
④ラジオボタンをチェックした際、現在のURLディレクトリに「/category」が含まれている、且つ、
「?article_data_keyword_filter」または「/date」が無い場合、
URLの末尾に「/hashtag」と親のli要素にあるdata-uri属性値を繋げて追加してそのURLに遷移する


■#js-dateの場合
①ラジオボタンをチェックした際、
現在のURLディレクトリに「/category」と「/hashtag」と「/date」と「?article_data_keyword_filter」が無い場合、
親のli要素にあるdata-uri属性値をURLの末尾に追加しそのURLに遷移する
②ラジオボタンをチェックした際、現在のURLディレクトリに「/date」が含まれている場合、
URLの「/date」以降を親のli要素にあるdata-uri属性値に書き換えてそのURLに遷移する
③ラジオボタンをチェックした際、現在のURLディレクトリに「/category」が含まれている、且つ、
「?article_data_keyword_filter」または「/hashtag」のいずれかが含まれている場合、
「?article_data_keyword_filter」または「/hashtag」以降のURLを削除し、
URLの末尾に親のli要素にあるdata-uri属性値を追加してそのURLに遷移する。
また、#js-hashtagのラジオボタン、#js-search-keywordのvalueをリセットする。
④ラジオボタンをチェックした際、現在のURLディレクトリに「/category」が含まれている、且つ、
「?article_data_keyword_filter」または「/hashtag」が無い場合、
URLの末尾に親のli要素にあるdata-uri属性値を追加してそのURLに遷移する

---------------------------------------------------------------
---------------------------------------------------------------

記事一覧ページ作成
・ページネーションの途中「…」にする方法 →対応無し
※ランキングのOMLはランキングソースが出るようになったら修正必要
  └スマホ用スタイル調整

◆URL生成方法
選択する順番に限らず、次の順番を守る
1.カテゴリから探す
https://lifetunes-mall-origin.ecbeing.biz/features/category/wear
2.人気キーワードリンク.../hashtag + data-uriの値
https://lifetunes-mall-origin.ecbeing.biz/features/hashtag/cook
3.アーカイブリンク...data-uriの値
https://lifetunes-mall-origin.ecbeing.biz/features/date/2023/07



記事一覧JS
【済】・カテゴリから探す部分のカレント機能
        .unt-list-cate-linkのhrefの値がURLに含まれていたら.is-currentを付ける
【済】・「キーワードから探す」で検索したら、検索キーワードをURLに表示させなくていい（デフォルト）
        代わりに、検索したキーワードをvalueに表示させておく
【済】・アーカイブのidとforに連番でarchive[num]の値を付与する
【済】・アーカイブのdata-urlの値から不要なものを取り除いてdata-uriとして値を付与する
【済】・スマホのモーダル
【済】・URLの制御：人気キーワードとアーカイブの選択でURLに付与する
・URLの制御：カテゴリ 対 キーワード or 人気キーワード or アーカイブの検索に対応する
・キーワードは「?article_data_keyword_filter=検索キーワード」で絞り込める



※パンくずのトップ（href="/"）にはa要素にico-topクラスが付くようにJSで



#js-categoryの場合
・a要素をクリックした際、現在のURLディレクトリに「/hashtag」と「/date」が無ければ通常の遷移を実行する
・a要素をクリックした際、現在のURLディレクトリに「/hashtag」または「/date」が含まれている場合、
「/hashtag」または「/date」の前にクリックしたhref属性値の「/category」以降をURLに追加しそのURLに遷移する
・a要素をクリックした際、現在のURLディレクトリに「/hashtag」と「/date」が含まれている場合、
「/hashtag」の前にクリックしたhref属性値の「/category」以降をURLに追加しそのURLに遷移する

#js-hashtagの場合
・ラジオボタンをチェックした際、現在のURLディレクトリに「/category」と「/date」が無ければ、
「/hashtag」値と親のli要素にあるdata-uri属性値を繋げてURLの末尾に追加しそのURLに遷移する
・ラジオボタンをチェックした際、現在のURLディレクトリに「/date」が含まれている場合、
「/hashtag」値と親のli要素にあるdata-uri属性値を繋げて「/date」の前に追加しそのURLに遷移する
・ラジオボタンをチェックした際、現在のURLディレクトリに「/category」が含まれている場合、
「/hashtag」値と親のli要素にあるdata-uri属性値を繋げてURLの末尾に追加しそのURLに遷移する

※自身（hashtag）が含まれる場合も

#js-dateの場合
・ラジオボタンをチェックした際、親のli要素にあるdata-uri属性値をURLの末尾に追加しそのURLに遷移する

※自身（date）が含まれる場合も

1.category
https://lifetunes-mall-origin.ecbeing.biz/features/category/wear
2.hashtag
https://lifetunes-mall-origin.ecbeing.biz/features/hashtag/cook
3.date
https://lifetunes-mall-origin.ecbeing.biz/features/date/2023/07